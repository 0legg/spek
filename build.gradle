buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    }
}

group = 'org.spek'
version = "1.0.0-SNAPSHOT"
apply plugin: 'kotlin'

allprojects {
    repositories {
        mavenCentral()
    }
    apply plugin: 'idea'

    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'
}

subprojects {
    buildscript {
        repositories {
            mavenCentral()
        }
        dependencies {
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        }
    }

    apply plugin: 'java'
    apply plugin: 'kotlin'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
        testCompile group: 'junit', name:'junit', version:"${junitVersion}"
        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    }

    test {

       // set heap size for the test JVM(s)
       minHeapSize = "128m"
       maxHeapSize = "512m"

       // set JVM arguments for the test JVM(s)
       jvmArgs '-XX:MaxPermSize=256m'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = 1.10

    doLast() {
      def gradleOpts = "-XX:MaxPermSize=300m -Xmx1024m"
      def gradlew_sh = file("gradlew")
      def gradlew_bat = file("gradlew.bat")
      gradlew_sh.text = gradlew_sh.text.replace("DEFAULT_JVM_OPTS=",
                                                "GRADLE_OPTS=\"$gradleOpts \$GRADLE_OPTS\"\nDEFAULT_JVM_OPTS=")
      gradlew_bat.text = gradlew_bat.text.replace("set DEFAULT_JVM_OPTS=",
                                                  "set GRADLE_OPTS=$gradleOpts %GRADLE_OPTS%\nset DEFAULT_JVM_OPTS=")

    }

}

dependencies {
    compile project(':spek-core')
    compile project(':spek-tests')
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}